#!/bin/bash

# üöÄ TELJES PRODUCTION DEPLOYMENT SCRIPT
# Minden l√©p√©st automatiz√°l a production deploymenthez

set -e  # Hiba eset√©n le√°ll√≠t√°s

echo "üöÄ MOLINO RENTAL CRM - PRODUCTION DEPLOYMENT"
echo "=============================================="

# Sz√≠nek
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Helper funkci√≥k
print_step() {
    echo -e "\n${BLUE}$1${NC}"
    echo "$(printf '=%.0s' {1..50})"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# 1. K√ñRNYEZET ELLEN≈êRZ√âSE
print_step "1Ô∏è‚É£  K√ñRNYEZET ELLEN≈êRZ√âSE"

# Node.js verzi√≥ ellen≈ërz√©se
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version)
    print_success "Node.js verzi√≥: $NODE_VERSION"
else
    print_error "Node.js nincs telep√≠tve!"
    exit 1
fi

# npm verzi√≥ ellen≈ërz√©se
if command -v npm &> /dev/null; then
    NPM_VERSION=$(npm --version)
    print_success "npm verzi√≥: $NPM_VERSION"
else
    print_error "npm nincs telep√≠tve!"
    exit 1
fi

# Vercel CLI ellen≈ërz√©se
if command -v vercel &> /dev/null; then
    print_success "Vercel CLI telep√≠tve"
else
    print_warning "Vercel CLI nincs telep√≠tve, telep√≠tj√ºk..."
    npm install -g vercel
fi

# 2. PROJEKT √ÅLLAPOT ELLEN≈êRZ√âSE
print_step "2Ô∏è‚É£  PROJEKT √ÅLLAPOT ELLEN≈êRZ√âSE"

# Git √°llapot
if git diff --quiet && git diff --staged --quiet; then
    print_success "Git working directory clean"
else
    print_warning "Uncommitted changes found - committing..."
    git add .
    git commit -m "Pre-deployment commit - $(date +%Y-%m-%d_%H:%M:%S)"
fi

# Package.json ellen≈ërz√©se
if [ -f "package.json" ]; then
    print_success "package.json megtal√°lva"
else
    print_error "package.json hi√°nyzik!"
    exit 1
fi

# Prisma schema ellen≈ërz√©se
if [ -f "prisma/schema.prisma" ]; then
    print_success "Prisma schema megtal√°lva"
else
    print_error "Prisma schema hi√°nyzik!"
    exit 1
fi

# 3. DEPENDENCIES TELEP√çT√âSE
print_step "3Ô∏è‚É£  DEPENDENCIES TELEP√çT√âSE"

npm install
print_success "Dependencies telep√≠tve"

# 4. TYPESCRIPT √âS BUILD ELLEN≈êRZ√âSE
print_step "4Ô∏è‚É£  TYPESCRIPT √âS BUILD ELLEN≈êRZ√âSE"

# TypeScript ellen≈ërz√©s
print_warning "TypeScript ellen≈ërz√©se..."
if npx tsc --noEmit; then
    print_success "TypeScript hib√°k nincsenek"
else
    print_error "TypeScript hib√°k tal√°lhat√≥k!"
    echo "Jav√≠tsd a TypeScript hib√°kat √©s futtasd √∫jra a scriptet."
    exit 1
fi

# Build test
print_warning "Production build tesztel√©se..."
if npm run build; then
    print_success "Build sikeres"
else
    print_error "Build sikertelen!"
    exit 1
fi

# 5. SUPABASE ADATB√ÅZIS SETUP
print_step "5Ô∏è‚É£  SUPABASE ADATB√ÅZIS SETUP"

print_warning "Prisma schema push Supabase-hez..."
if DATABASE_URL="postgresql://postgres.wymltaiembzuugxnaqzz:Gabo123kekw@aws-0-eu-central-2.pooler.supabase.com:6543/postgres" npx prisma db push; then
    print_success "Prisma schema szinkroniz√°lva"
else
    print_error "Prisma schema push sikertelen!"
    exit 1
fi

print_warning "Admin user √©s test adatok l√©trehoz√°sa..."
if npx tsx scripts/supabase-production-setup.ts; then
    print_success "Adatb√°zis setup k√©sz"
else
    print_error "Adatb√°zis setup sikertelen!"
    exit 1
fi

# 6. VERCEL ENVIRONMENT VARIABLES
print_step "6Ô∏è‚É£  VERCEL ENVIRONMENT VARIABLES"

print_warning "FONTOS: Ellen≈ërizd a Vercel environment v√°ltoz√≥kat!"
echo ""
echo "Menj a Vercel Dashboard-ra:"
echo "https://vercel.com/ghollosi/molino-rental-crm/settings/environment-variables"
echo ""
echo "T√∂r√∂ld ki az √∂sszes megl√©v≈ë v√°ltoz√≥t √©s add hozz√° ezeket:"
echo ""
cat << 'EOF'
DATABASE_URL=postgresql://postgres.wymltaiembzuugxnaqzz:Gabo123kekw@aws-0-eu-central-2.pooler.supabase.com:6543/postgres
NEXTAUTH_URL=https://molino-rental-crm.vercel.app
NEXTAUTH_SECRET=molino-rental-crm-super-secret-key-2025
RESEND_API_KEY=re_YUHrniX6_PAbF5mXFSUqJK86DoYS8haeF
R2_ACCESS_KEY_ID=062db13eb2d227445539332b737c5c41
R2_SECRET_ACCESS_KEY=27b5077b94cc85ab79adb43495af8edb78fd40a85d7b3770c21a36d9e9c5a2b2
R2_BUCKET=molino-rental-uploads
R2_ENDPOINT=https://cd381d9453ab9baed52c917bb535aae2.r2.cloudflarestorage.com
NEXT_PUBLIC_APP_URL=https://molino-rental-crm.vercel.app
NODE_ENV=production
PORT=3333
EOF
echo ""
read -p "Be√°ll√≠tottad a Vercel environment v√°ltoz√≥kat? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    print_error "√Åll√≠tsd be a Vercel environment v√°ltoz√≥kat √©s futtasd √∫jra!"
    exit 1
fi

# 7. VERCEL DEPLOYMENT
print_step "7Ô∏è‚É£  VERCEL DEPLOYMENT"

print_warning "Git push origin main..."
git push origin main
print_success "Git push k√©sz"

print_warning "Vercel deployment ind√≠t√°sa..."
if vercel --prod; then
    print_success "Vercel deployment sikeres"
else
    print_error "Vercel deployment sikertelen!"
    exit 1
fi

# 8. DEPLOYMENT TESZT
print_step "8Ô∏è‚É£  DEPLOYMENT TESZT"

print_warning "V√°rakoz√°s deployment befejez√©s√©re... (30 m√°sodperc)"
sleep 30

PRODUCTION_URL="https://molino-rental-crm.vercel.app"
BYPASS_URL="$PRODUCTION_URL/api/bypass-login"

print_warning "Production URL tesztel√©se..."
if curl -f -s "$PRODUCTION_URL" > /dev/null; then
    print_success "Production URL el√©rhet≈ë: $PRODUCTION_URL"
else
    print_error "Production URL nem el√©rhet≈ë!"
fi

print_warning "Bypass login tesztel√©se..."
if curl -f -s "$BYPASS_URL" > /dev/null; then
    print_success "Bypass login el√©rhet≈ë: $BYPASS_URL"
else
    print_error "Bypass login nem el√©rhet≈ë!"
fi

# 9. √ñSSZEFOGLAL√ì
print_step "üéâ DEPLOYMENT K√âSZ!"

echo ""
echo "üìã √ñSSZEFOGLAL√ì:"
print_success "‚úÖ TypeScript ellen≈ërz√©s: OK"
print_success "‚úÖ Build teszt: OK"
print_success "‚úÖ Supabase adatb√°zis: OK"
print_success "‚úÖ Admin user l√©trehozva: OK"
print_success "‚úÖ Test adatok: OK"
print_success "‚úÖ Vercel deployment: OK"
print_success "‚úÖ Production URL: OK"

echo ""
echo "üîó LINKEK:"
echo "   Production URL: $PRODUCTION_URL"
echo "   Bypass Login:   $BYPASS_URL"
echo "   Force Login:    $PRODUCTION_URL/api/force-login"
echo "   Direct Login:   $PRODUCTION_URL/direct-login"

echo ""
echo "üîë BEJELENTKEZ√âSI ADATOK:"
echo "   Admin:     admin@molino.com / admin123"
echo "   Owners:    owner1-5@example.com / user123"
echo "   Tenants:   tenant1-5@example.com / user123"
echo "   Providers: provider1-5@example.com / user123"

echo ""
echo "üß™ TESZTEL√âSI L√âP√âSEK:"
echo "1. Nyisd meg: $PRODUCTION_URL"
echo "2. Pr√≥b√°ld ki: admin@molino.com / admin123"
echo "3. Ha nem megy, pr√≥b√°ld: $BYPASS_URL"
echo "4. Ellen≈ërizd a Dashboard adatokat"

echo ""
print_success "üöÄ MOLINO RENTAL CRM PRODUCTION DEPLOYMENT SIKERES!"