
> molino-rental-crm@0.1.0 dev
> next dev -p 3333

   â–² Next.js 15.3.2
   - Local:        http://localhost:3333
   - Network:      http://192.168.2.173:3333
   - Environments: .env.local, .env

 âœ“ Starting...
 âœ“ Ready in 1275ms
 â—‹ Compiling /middleware ...
 âœ“ Compiled /middleware in 624ms (308 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 â—‹ Compiling /api/health-check ...
 âœ“ Compiled /api/health-check in 766ms (410 modules)
 GET /api/health-check 200 in 866ms
<w> [webpack.cache.PackFileCacheStrategy] Serializing big strings (130kiB) impacts deserialization performance (consider using Buffer instead and decode when needed)
 â—‹ Compiling / ...
 âœ“ Compiled / in 2.3s (1106 modules)
 GET / 200 in 2461ms
 âœ“ Compiled in 118ms (484 modules)
 GET / 200 in 42ms
 â—‹ Compiling /dashboard ...
 âœ“ Compiled /dashboard in 2.5s (2468 modules)
 GET /dashboard 200 in 2867ms
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /api/auth/[...nextauth] in 1558ms (2472 modules)
 âœ“ Compiled in 1027ms (1155 modules)
 GET /.well-known/appspecific/com.chrome.devtools.json 404 in 3914ms
 GET /login 200 in 3556ms
 GET /api/auth/session 200 in 112ms
 GET /api/auth/session 200 in 3206ms
 GET /api/auth/session 200 in 6ms
 GET /api/auth/session 200 in 23ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 1270ms (3097 modules)
 GET /api/auth/session 200 in 44ms
 GET /api/auth/session 200 in 32ms
prisma:query SELECT "public"."Property"."id", "public"."Property"."rentAmount", "public"."Property"."currency" FROM "public"."Property" WHERE ("public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") AND "public"."Property"."rentAmount" IS NOT NULL) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Offer"."id" FROM "public"."Offer" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Offer"."id" FROM "public"."Offer" WHERE "public"."Offer"."status" = CAST($1::text AS "public"."OfferStatus") OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE "public"."Issue"."status" IN (CAST($1::text AS "public"."IssueStatus"),CAST($2::text AS "public"."IssueStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Contract"."id", "public"."Contract"."propertyId", "public"."Contract"."tenantId", "public"."Contract"."startDate", "public"."Contract"."endDate", "public"."Contract"."rentAmount", "public"."Contract"."deposit", "public"."Contract"."paymentDay", "public"."Contract"."createdAt", "public"."Contract"."updatedAt", "public"."Contract"."attachments", "public"."Contract"."content", "public"."Contract"."contractNumber", "public"."Contract"."landlordSignature", "public"."Contract"."landlordSigned", "public"."Contract"."landlordSignedAt", "public"."Contract"."pdfUrl", "public"."Contract"."status"::text, "public"."Contract"."templateId", "public"."Contract"."tenantSignature", "public"."Contract"."tenantSigned", "public"."Contract"."tenantSignedAt", "public"."Contract"."title", "public"."Contract"."variables" FROM "public"."Contract" WHERE ("public"."Contract"."status" = CAST($1::text AS "public"."ContractStatus") AND "public"."Contract"."endDate" >= $2 AND "public"."Contract"."endDate" <= $3) ORDER BY "public"."Contract"."endDate" ASC OFFSET $4
prisma:query SELECT COUNT("public"."Property"."id"), "public"."Property"."status"::text FROM "public"."Property" WHERE 1=1 GROUP BY "public"."Property"."status" OFFSET $1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Contract"."id", "public"."Contract"."propertyId", "public"."Contract"."tenantId", "public"."Contract"."startDate", "public"."Contract"."endDate", "public"."Contract"."rentAmount", "public"."Contract"."deposit", "public"."Contract"."paymentDay", "public"."Contract"."createdAt", "public"."Contract"."updatedAt", "public"."Contract"."attachments", "public"."Contract"."content", "public"."Contract"."contractNumber", "public"."Contract"."landlordSignature", "public"."Contract"."landlordSigned", "public"."Contract"."landlordSignedAt", "public"."Contract"."pdfUrl", "public"."Contract"."status"::text, "public"."Contract"."templateId", "public"."Contract"."tenantSignature", "public"."Contract"."tenantSigned", "public"."Contract"."tenantSignedAt", "public"."Contract"."title", "public"."Contract"."variables" FROM "public"."Contract" WHERE (("public"."Contract"."status" = CAST($1::text AS "public"."ContractStatus") OR "public"."Contract"."status" = CAST($2::text AS "public"."ContractStatus")) AND "public"."Contract"."startDate" <= $3 AND "public"."Contract"."endDate" >= $4) OFFSET $5
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE "public"."Tenant"."isActive" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Issue"."id", "public"."Issue"."ticketNumber", "public"."Issue"."propertyId", "public"."Issue"."reportedById", "public"."Issue"."assignedToId", "public"."Issue"."managedById", "public"."Issue"."title", "public"."Issue"."description", "public"."Issue"."category"::text, "public"."Issue"."priority"::text, "public"."Issue"."photos", "public"."Issue"."status"::text, "public"."Issue"."scheduledDate", "public"."Issue"."completedDate", "public"."Issue"."createdAt", "public"."Issue"."updatedAt", COALESCE("aggr_selection_0_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers", COALESCE("aggr_selection_1_IssueTimeline"."_aggr_count_timeline", 0) AS "_aggr_count_timeline" FROM "public"."Issue" LEFT JOIN (SELECT "public"."Offer"."issueId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."issueId") AS "aggr_selection_0_Offer" ON ("public"."Issue"."id" = "aggr_selection_0_Offer"."issueId") LEFT JOIN (SELECT "public"."IssueTimeline"."issueId", COUNT(*) AS "_aggr_count_timeline" FROM "public"."IssueTimeline" WHERE 1=1 GROUP BY "public"."IssueTimeline"."issueId") AS "aggr_selection_1_IssueTimeline" ON ("public"."Issue"."id" = "aggr_selection_1_IssueTimeline"."issueId") WHERE 1=1 ORDER BY "public"."Issue"."priority" DESC, "public"."Issue"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE "public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") OFFSET $2) AS "sub"
prisma:query SELECT COUNT("public"."Issue"."id"), "public"."Issue"."category"::text FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."category" ORDER BY COUNT("public"."Issue"."id") DESC OFFSET $1
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city" FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."ownerId" FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."postalCode", "public"."Property"."country", "public"."Property"."latitude", "public"."Property"."longitude", "public"."Property"."ownerId", "public"."Property"."currentTenantId", "public"."Property"."type"::text, "public"."Property"."size", "public"."Property"."rooms", "public"."Property"."floor", "public"."Property"."rentAmount", "public"."Property"."currency", "public"."Property"."photos", "public"."Property"."status"::text, "public"."Property"."createdAt", "public"."Property"."updatedAt", COALESCE("aggr_selection_0_Issue"."_aggr_count_issues", 0) AS "_aggr_count_issues", COALESCE("aggr_selection_1_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers" FROM "public"."Property" LEFT JOIN (SELECT "public"."Issue"."propertyId", COUNT(*) AS "_aggr_count_issues" FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."propertyId") AS "aggr_selection_0_Issue" ON ("public"."Property"."id" = "aggr_selection_0_Issue"."propertyId") LEFT JOIN (SELECT "public"."Offer"."propertyId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."propertyId") AS "aggr_selection_1_Offer" ON ("public"."Property"."id" = "aggr_selection_1_Offer"."propertyId") WHERE 1=1 ORDER BY "public"."Property"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Provider"."id", "public"."Provider"."userId", "public"."Provider"."businessName", "public"."Provider"."specialty", "public"."Provider"."hourlyRate", "public"."Provider"."currency", "public"."Provider"."availability", "public"."Provider"."rating", "public"."Provider"."createdAt", "public"."Provider"."updatedAt" FROM "public"."Provider" WHERE "public"."Provider"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2) OFFSET $3
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(YEAR FROM "transactionDate") = $1
    
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'EXPENSE'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status = 'PENDING'
    
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query 
      SELECT COUNT(*) as count
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status = 'PENDING'
        AND "dueDate" < CURRENT_DATE
    
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE "public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") OFFSET $2) AS "sub"
 GET /api/trpc/analytics.dashboardStats,analytics.getFinancialSummary,contracts.getExpiringContracts,analytics.getOutstandingPayments,analytics.issuesByMonth,analytics.propertiesByStatus,analytics.revenueByMonth,analytics.issuesByCategory,issue.list,property.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22days%22%3A60%7D%7D%2C%223%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%224%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%225%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%226%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%227%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%228%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A3%7D%7D%2C%229%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A5%7D%7D%7D 200 in 3381ms
 GET / 200 in 208ms
 â—‹ Compiling /dashboard/settings ...
 âœ“ Compiled /dashboard/settings in 901ms (3156 modules)
 GET /dashboard/settings 200 in 1002ms
 â—‹ Compiling /dashboard/settings/cloud-storage ...
 âœ“ Compiled /dashboard/settings/cloud-storage in 970ms (3173 modules)
 GET /dashboard/settings/cloud-storage 200 in 1051ms
 â—‹ Compiling /api/cloud-storage ...
 âœ“ Compiled /api/cloud-storage in 572ms (3175 modules)
Cloud storage upload error: [Error: write EPROTO 001F96FA01000000:error:0A000410:SSL routines:ssl3_read_bytes:ssl/tls alert handshake failure:ssl/record/rec_layer_s3.c:911:SSL alert number 40
] {
  errno: -100,
  code: 'EPROTO',
  syscall: 'write',
  '$metadata': [Object]
}
Cloud storage upload error: Error: Failed to upload file: write EPROTO 001F96FA01000000:error:0A000410:SSL routines:ssl3_read_bytes:ssl/tls alert handshake failure:ssl/record/rec_layer_s3.c:911:SSL alert number 40

    at uploadFile (src/lib/cloud-storage.ts:129:10)
    at async POST (app/api/cloud-storage/route.ts:29:19)
  127 |   } catch (error) {
  128 |     console.error('Cloud storage upload error:', error);
> 129 |     throw new Error(`Failed to upload file: ${error instanceof Error ? error.message : 'Unknown error'}`);
      |          ^
  130 |   }
  131 | }
  132 |
 POST /api/cloud-storage 500 in 1160ms
 GET / 200 in 101ms
Cloud storage connection test failed: [Error: write EPROTO 001F96FA01000000:error:0A000410:SSL routines:ssl3_read_bytes:ssl/tls alert handshake failure:ssl/record/rec_layer_s3.c:911:SSL alert number 40
] {
  errno: -100,
  code: 'EPROTO',
  syscall: 'write',
  '$metadata': [Object]
}
 GET /api/cloud-storage?action=test 200 in 53ms
 GET / 200 in 65ms
 GET / 200 in 29ms
   Reload env: .env
 âœ“ Compiled in 901ms (2862 modules)
 GET /login 200 in 160ms
 GET /dashboard/settings/cloud-storage 200 in 173ms
 GET / 200 in 124ms
   Reload env: .env
 âœ“ Compiled in 549ms (2862 modules)
 GET /login 200 in 99ms
 GET /dashboard/settings/cloud-storage 200 in 24ms
 GET / 200 in 109ms
 GET / 200 in 51ms
 âœ“ Compiled in 1146ms (2568 modules)
 GET /login 200 in 66ms
 GET /dashboard/settings/cloud-storage 200 in 82ms
 GET / 200 in 102ms
 GET / 200 in 44ms
 GET / 200 in 53ms
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 718ms (1533 modules)
 GET /api/auth/session 200 in 913ms
 GET /api/auth/session 200 in 5ms
 GET / 200 in 185ms
 GET /dashboard/settings/cloud-storage 200 in 185ms
 GET /api/auth/session 200 in 17ms
 GET /api/auth/session 200 in 8ms
 GET /dashboard 200 in 52ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 820ms (1982 modules)
prisma:query SELECT "public"."Property"."id", "public"."Property"."rentAmount", "public"."Property"."currency" FROM "public"."Property" WHERE ("public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") AND "public"."Property"."rentAmount" IS NOT NULL) OFFSET $2
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query SELECT COUNT("public"."Property"."id"), "public"."Property"."status"::text FROM "public"."Property" WHERE 1=1 GROUP BY "public"."Property"."status" OFFSET $1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE "public"."Issue"."status" IN (CAST($1::text AS "public"."IssueStatus"),CAST($2::text AS "public"."IssueStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Offer"."id" FROM "public"."Offer" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Offer"."id" FROM "public"."Offer" WHERE "public"."Offer"."status" = CAST($1::text AS "public"."OfferStatus") OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE "public"."Tenant"."isActive" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE "public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") OFFSET $2) AS "sub"
prisma:query SELECT "public"."Contract"."id", "public"."Contract"."propertyId", "public"."Contract"."tenantId", "public"."Contract"."startDate", "public"."Contract"."endDate", "public"."Contract"."rentAmount", "public"."Contract"."deposit", "public"."Contract"."paymentDay", "public"."Contract"."createdAt", "public"."Contract"."updatedAt", "public"."Contract"."attachments", "public"."Contract"."content", "public"."Contract"."contractNumber", "public"."Contract"."landlordSignature", "public"."Contract"."landlordSigned", "public"."Contract"."landlordSignedAt", "public"."Contract"."pdfUrl", "public"."Contract"."status"::text, "public"."Contract"."templateId", "public"."Contract"."tenantSignature", "public"."Contract"."tenantSigned", "public"."Contract"."tenantSignedAt", "public"."Contract"."title", "public"."Contract"."variables" FROM "public"."Contract" WHERE ("public"."Contract"."status" = CAST($1::text AS "public"."ContractStatus") AND "public"."Contract"."endDate" >= $2 AND "public"."Contract"."endDate" <= $3) ORDER BY "public"."Contract"."endDate" ASC OFFSET $4
prisma:query SELECT COUNT("public"."Issue"."id"), "public"."Issue"."category"::text FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."category" ORDER BY COUNT("public"."Issue"."id") DESC OFFSET $1
prisma:query SELECT "public"."Contract"."id", "public"."Contract"."propertyId", "public"."Contract"."tenantId", "public"."Contract"."startDate", "public"."Contract"."endDate", "public"."Contract"."rentAmount", "public"."Contract"."deposit", "public"."Contract"."paymentDay", "public"."Contract"."createdAt", "public"."Contract"."updatedAt", "public"."Contract"."attachments", "public"."Contract"."content", "public"."Contract"."contractNumber", "public"."Contract"."landlordSignature", "public"."Contract"."landlordSigned", "public"."Contract"."landlordSignedAt", "public"."Contract"."pdfUrl", "public"."Contract"."status"::text, "public"."Contract"."templateId", "public"."Contract"."tenantSignature", "public"."Contract"."tenantSigned", "public"."Contract"."tenantSignedAt", "public"."Contract"."title", "public"."Contract"."variables" FROM "public"."Contract" WHERE (("public"."Contract"."status" = CAST($1::text AS "public"."ContractStatus") OR "public"."Contract"."status" = CAST($2::text AS "public"."ContractStatus")) AND "public"."Contract"."startDate" <= $3 AND "public"."Contract"."endDate" >= $4) OFFSET $5
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(YEAR FROM "transactionDate") = $1
    
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."postalCode", "public"."Property"."country", "public"."Property"."latitude", "public"."Property"."longitude", "public"."Property"."ownerId", "public"."Property"."currentTenantId", "public"."Property"."type"::text, "public"."Property"."size", "public"."Property"."rooms", "public"."Property"."floor", "public"."Property"."rentAmount", "public"."Property"."currency", "public"."Property"."photos", "public"."Property"."status"::text, "public"."Property"."createdAt", "public"."Property"."updatedAt", COALESCE("aggr_selection_0_Issue"."_aggr_count_issues", 0) AS "_aggr_count_issues", COALESCE("aggr_selection_1_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers" FROM "public"."Property" LEFT JOIN (SELECT "public"."Issue"."propertyId", COUNT(*) AS "_aggr_count_issues" FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."propertyId") AS "aggr_selection_0_Issue" ON ("public"."Property"."id" = "aggr_selection_0_Issue"."propertyId") LEFT JOIN (SELECT "public"."Offer"."propertyId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."propertyId") AS "aggr_selection_1_Offer" ON ("public"."Property"."id" = "aggr_selection_1_Offer"."propertyId") WHERE 1=1 ORDER BY "public"."Property"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Issue"."id", "public"."Issue"."ticketNumber", "public"."Issue"."propertyId", "public"."Issue"."reportedById", "public"."Issue"."assignedToId", "public"."Issue"."managedById", "public"."Issue"."title", "public"."Issue"."description", "public"."Issue"."category"::text, "public"."Issue"."priority"::text, "public"."Issue"."photos", "public"."Issue"."status"::text, "public"."Issue"."scheduledDate", "public"."Issue"."completedDate", "public"."Issue"."createdAt", "public"."Issue"."updatedAt", COALESCE("aggr_selection_0_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers", COALESCE("aggr_selection_1_IssueTimeline"."_aggr_count_timeline", 0) AS "_aggr_count_timeline" FROM "public"."Issue" LEFT JOIN (SELECT "public"."Offer"."issueId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."issueId") AS "aggr_selection_0_Offer" ON ("public"."Issue"."id" = "aggr_selection_0_Offer"."issueId") LEFT JOIN (SELECT "public"."IssueTimeline"."issueId", COUNT(*) AS "_aggr_count_timeline" FROM "public"."IssueTimeline" WHERE 1=1 GROUP BY "public"."IssueTimeline"."issueId") AS "aggr_selection_1_IssueTimeline" ON ("public"."Issue"."id" = "aggr_selection_1_IssueTimeline"."issueId") WHERE 1=1 ORDER BY "public"."Issue"."priority" DESC, "public"."Issue"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'EXPENSE'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status = 'PENDING'
    
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."ownerId" FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query 
      SELECT COUNT(*) as count
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status = 'PENDING'
        AND "dueDate" < CURRENT_DATE
    
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city" FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Provider"."id", "public"."Provider"."userId", "public"."Provider"."businessName", "public"."Provider"."specialty", "public"."Provider"."hourlyRate", "public"."Provider"."currency", "public"."Provider"."availability", "public"."Provider"."rating", "public"."Provider"."createdAt", "public"."Provider"."updatedAt" FROM "public"."Provider" WHERE "public"."Provider"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE "public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") OFFSET $2) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2) OFFSET $3
 GET /api/trpc/analytics.dashboardStats,analytics.getFinancialSummary,contracts.getExpiringContracts,analytics.getOutstandingPayments,analytics.issuesByMonth,analytics.propertiesByStatus,analytics.revenueByMonth,analytics.issuesByCategory,issue.list,property.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22days%22%3A60%7D%7D%2C%223%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%224%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%225%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%226%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%227%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%228%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A3%7D%7D%2C%229%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A5%7D%7D%7D 200 in 1619ms
 GET / 200 in 153ms
 GET / 200 in 69ms
 GET / 200 in 53ms
 GET / 200 in 57ms
 GET / 200 in 106ms
 GET / 200 in 45ms
 GET / 200 in 52ms
 GET / 200 in 41ms
 GET / 200 in 53ms
 GET / 200 in 48ms
 GET / 200 in 74ms
 GET / 200 in 48ms
 GET / 200 in 49ms
 GET / 200 in 46ms
 GET / 200 in 45ms
 GET / 200 in 59ms
 GET / 200 in 51ms
 GET / 200 in 63ms
 GET / 200 in 42ms
 GET / 200 in 38ms
 GET / 200 in 45ms
 GET / 200 in 55ms
 GET / 200 in 49ms
 GET / 200 in 40ms
 GET / 200 in 45ms
 GET / 200 in 37ms
 GET / 200 in 47ms
 GET / 200 in 35ms
 GET / 200 in 79ms
 GET / 200 in 88ms
 GET / 200 in 42ms
 GET / 200 in 49ms
 GET / 200 in 58ms
 GET / 200 in 54ms
 GET / 200 in 49ms
 GET / 200 in 48ms
 GET / 200 in 62ms
 GET / 200 in 74ms
 GET / 200 in 81ms
 GET / 200 in 80ms
 GET / 200 in 53ms
 GET / 200 in 56ms
 GET / 200 in 51ms
 GET / 200 in 60ms
 GET / 200 in 68ms
 GET / 200 in 44ms
 GET / 200 in 96ms
 GET / 200 in 70ms
 GET / 200 in 42ms
 GET / 200 in 189ms
 GET / 200 in 86ms
 GET / 200 in 57ms
 GET / 200 in 58ms
 GET / 200 in 102ms
 GET / 200 in 70ms
 GET / 200 in 63ms
 GET / 200 in 54ms
 GET / 200 in 74ms
 GET / 200 in 249ms
 GET / 200 in 73ms
 GET / 200 in 49ms
 GET / 200 in 60ms
 GET / 200 in 59ms
 GET / 200 in 53ms
 GET / 200 in 81ms
 GET / 200 in 69ms
 GET / 200 in 68ms
 GET / 200 in 56ms
 GET / 200 in 54ms
 GET / 200 in 70ms
 GET / 200 in 64ms
 GET / 200 in 61ms
 GET / 200 in 49ms
 GET / 200 in 60ms
 GET / 200 in 66ms
 GET / 200 in 45ms
 GET / 200 in 57ms
 GET / 200 in 57ms
 GET / 200 in 41ms
 GET / 200 in 72ms
 GET / 200 in 77ms
 GET / 200 in 48ms
 GET / 200 in 61ms
 GET / 200 in 58ms
 GET / 200 in 56ms
 GET / 200 in 62ms
 GET / 200 in 45ms
 GET / 200 in 50ms
 GET / 200 in 72ms
 GET / 200 in 53ms
 GET / 200 in 53ms
 GET / 200 in 53ms
 GET / 200 in 51ms
 GET / 200 in 65ms
 GET / 200 in 49ms
 GET / 200 in 53ms
 GET / 200 in 97ms
 GET / 200 in 50ms
 GET / 200 in 43ms
 GET / 200 in 56ms
 GET / 200 in 41ms
 GET / 200 in 40ms
 GET / 200 in 53ms
 GET / 200 in 45ms
 GET / 200 in 55ms
 GET / 200 in 70ms
 GET / 200 in 666ms
 GET / 200 in 50ms
 GET / 200 in 50ms
 GET / 200 in 47ms
 GET / 200 in 46ms
 GET / 200 in 52ms
 GET / 200 in 63ms
 GET / 200 in 53ms
 GET / 200 in 57ms
 GET / 200 in 53ms
 GET / 200 in 53ms
 GET / 200 in 65ms
 GET / 200 in 43ms
 GET / 200 in 58ms
 GET / 200 in 46ms
 GET / 200 in 60ms
 GET / 200 in 61ms
 GET / 200 in 47ms
 GET / 200 in 59ms
 GET / 200 in 60ms
 GET / 200 in 55ms
 GET / 200 in 59ms
 GET / 200 in 44ms
 GET / 200 in 43ms
 GET / 200 in 46ms
 GET / 200 in 39ms
 GET / 200 in 44ms
 GET / 200 in 37ms
 GET / 200 in 39ms
 GET / 200 in 44ms
 GET / 200 in 49ms
 GET / 200 in 42ms
 GET / 200 in 43ms
 GET / 200 in 40ms
 GET / 200 in 40ms
 GET / 200 in 26ms
 GET / 200 in 43ms
 GET / 200 in 28ms
 GET / 200 in 43ms
 GET / 200 in 27ms
 GET / 200 in 50ms
 GET / 200 in 37ms
 GET / 200 in 60ms
 GET / 200 in 43ms
 GET / 200 in 43ms
 GET / 200 in 28ms
 GET / 200 in 45ms
 GET / 200 in 40ms
 GET / 200 in 55ms
 GET / 200 in 50ms
 GET / 200 in 51ms
 GET / 200 in 43ms
 GET / 200 in 45ms
 GET / 200 in 44ms
 GET / 200 in 45ms
 GET / 200 in 43ms
 GET / 200 in 48ms
 GET /login 200 in 239ms
 GET /api/auth/session 200 in 32ms
 GET /api/auth/session 200 in 7ms
 GET /api/auth/session 200 in 28ms
 GET /api/auth/session 200 in 22ms
 GET /dashboard 200 in 466ms
 GET /api/auth/session 200 in 21ms
 GET /api/auth/session 200 in 41ms
 GET / 200 in 75ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT "public"."Contract"."id", "public"."Contract"."propertyId", "public"."Contract"."tenantId", "public"."Contract"."startDate", "public"."Contract"."endDate", "public"."Contract"."rentAmount", "public"."Contract"."deposit", "public"."Contract"."paymentDay", "public"."Contract"."createdAt", "public"."Contract"."updatedAt", "public"."Contract"."attachments", "public"."Contract"."content", "public"."Contract"."contractNumber", "public"."Contract"."landlordSignature", "public"."Contract"."landlordSigned", "public"."Contract"."landlordSignedAt", "public"."Contract"."pdfUrl", "public"."Contract"."status"::text, "public"."Contract"."templateId", "public"."Contract"."tenantSignature", "public"."Contract"."tenantSigned", "public"."Contract"."tenantSignedAt", "public"."Contract"."title", "public"."Contract"."variables" FROM "public"."Contract" WHERE (("public"."Contract"."status" = CAST($1::text AS "public"."ContractStatus") OR "public"."Contract"."status" = CAST($2::text AS "public"."ContractStatus")) AND "public"."Contract"."startDate" <= $3 AND "public"."Contract"."endDate" >= $4) OFFSET $5
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query SELECT "public"."Property"."id", "public"."Property"."rentAmount", "public"."Property"."currency" FROM "public"."Property" WHERE ("public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") AND "public"."Property"."rentAmount" IS NOT NULL) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Contract"."id", "public"."Contract"."propertyId", "public"."Contract"."tenantId", "public"."Contract"."startDate", "public"."Contract"."endDate", "public"."Contract"."rentAmount", "public"."Contract"."deposit", "public"."Contract"."paymentDay", "public"."Contract"."createdAt", "public"."Contract"."updatedAt", "public"."Contract"."attachments", "public"."Contract"."content", "public"."Contract"."contractNumber", "public"."Contract"."landlordSignature", "public"."Contract"."landlordSigned", "public"."Contract"."landlordSignedAt", "public"."Contract"."pdfUrl", "public"."Contract"."status"::text, "public"."Contract"."templateId", "public"."Contract"."tenantSignature", "public"."Contract"."tenantSigned", "public"."Contract"."tenantSignedAt", "public"."Contract"."title", "public"."Contract"."variables" FROM "public"."Contract" WHERE ("public"."Contract"."status" = CAST($1::text AS "public"."ContractStatus") AND "public"."Contract"."endDate" >= $2 AND "public"."Contract"."endDate" <= $3) ORDER BY "public"."Contract"."endDate" ASC OFFSET $4
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE "public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE "public"."Tenant"."isActive" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Offer"."id" FROM "public"."Offer" WHERE "public"."Offer"."status" = CAST($1::text AS "public"."OfferStatus") OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE "public"."Issue"."status" IN (CAST($1::text AS "public"."IssueStatus"),CAST($2::text AS "public"."IssueStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT("public"."Issue"."id"), "public"."Issue"."category"::text FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."category" ORDER BY COUNT("public"."Issue"."id") DESC OFFSET $1
prisma:query SELECT COUNT("public"."Property"."id"), "public"."Property"."status"::text FROM "public"."Property" WHERE 1=1 GROUP BY "public"."Property"."status" OFFSET $1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Offer"."id" FROM "public"."Offer" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."postalCode", "public"."Property"."country", "public"."Property"."latitude", "public"."Property"."longitude", "public"."Property"."ownerId", "public"."Property"."currentTenantId", "public"."Property"."type"::text, "public"."Property"."size", "public"."Property"."rooms", "public"."Property"."floor", "public"."Property"."rentAmount", "public"."Property"."currency", "public"."Property"."photos", "public"."Property"."status"::text, "public"."Property"."createdAt", "public"."Property"."updatedAt", COALESCE("aggr_selection_0_Issue"."_aggr_count_issues", 0) AS "_aggr_count_issues", COALESCE("aggr_selection_1_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers" FROM "public"."Property" LEFT JOIN (SELECT "public"."Issue"."propertyId", COUNT(*) AS "_aggr_count_issues" FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."propertyId") AS "aggr_selection_0_Issue" ON ("public"."Property"."id" = "aggr_selection_0_Issue"."propertyId") LEFT JOIN (SELECT "public"."Offer"."propertyId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."propertyId") AS "aggr_selection_1_Offer" ON ("public"."Property"."id" = "aggr_selection_1_Offer"."propertyId") WHERE 1=1 ORDER BY "public"."Property"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(YEAR FROM "transactionDate") = $1
    
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'EXPENSE'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Issue"."id", "public"."Issue"."ticketNumber", "public"."Issue"."propertyId", "public"."Issue"."reportedById", "public"."Issue"."assignedToId", "public"."Issue"."managedById", "public"."Issue"."title", "public"."Issue"."description", "public"."Issue"."category"::text, "public"."Issue"."priority"::text, "public"."Issue"."photos", "public"."Issue"."status"::text, "public"."Issue"."scheduledDate", "public"."Issue"."completedDate", "public"."Issue"."createdAt", "public"."Issue"."updatedAt", COALESCE("aggr_selection_0_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers", COALESCE("aggr_selection_1_IssueTimeline"."_aggr_count_timeline", 0) AS "_aggr_count_timeline" FROM "public"."Issue" LEFT JOIN (SELECT "public"."Offer"."issueId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."issueId") AS "aggr_selection_0_Offer" ON ("public"."Issue"."id" = "aggr_selection_0_Offer"."issueId") LEFT JOIN (SELECT "public"."IssueTimeline"."issueId", COUNT(*) AS "_aggr_count_timeline" FROM "public"."IssueTimeline" WHERE 1=1 GROUP BY "public"."IssueTimeline"."issueId") AS "aggr_selection_1_IssueTimeline" ON ("public"."Issue"."id" = "aggr_selection_1_IssueTimeline"."issueId") WHERE 1=1 ORDER BY "public"."Issue"."priority" DESC, "public"."Issue"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status = 'PENDING'
    
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city" FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE ("public"."Issue"."createdAt" >= $1 AND "public"."Issue"."createdAt" <= $2 AND "public"."Issue"."status" = CAST($3::text AS "public"."IssueStatus")) OFFSET $4) AS "sub"
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."ownerId" FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query 
      SELECT COUNT(*) as count
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status = 'PENDING'
        AND "dueDate" < CURRENT_DATE
    
prisma:query 
      SELECT SUM(amount) as total
      FROM "Transaction"
      WHERE type = 'INCOME'
        AND status IN ('COMPLETED', 'PENDING')
        AND EXTRACT(MONTH FROM "transactionDate") = $1
        AND EXTRACT(YEAR FROM "transactionDate") = $2
    
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE "public"."Property"."status" = CAST($1::text AS "public"."PropertyStatus") OFFSET $2) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Provider"."id", "public"."Provider"."userId", "public"."Provider"."businessName", "public"."Provider"."specialty", "public"."Provider"."hourlyRate", "public"."Provider"."currency", "public"."Provider"."availability", "public"."Provider"."rating", "public"."Provider"."createdAt", "public"."Provider"."updatedAt" FROM "public"."Provider" WHERE "public"."Provider"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2) OFFSET $3
 GET /api/trpc/analytics.dashboardStats,analytics.getFinancialSummary,contracts.getExpiringContracts,analytics.getOutstandingPayments,analytics.issuesByMonth,analytics.propertiesByStatus,analytics.revenueByMonth,analytics.issuesByCategory,issue.list,property.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22days%22%3A60%7D%7D%2C%223%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%224%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%225%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%226%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%227%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%228%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A3%7D%7D%2C%229%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A5%7D%7D%7D 200 in 561ms
 GET /api/auth/session 200 in 19ms
 GET /api/auth/session 200 in 12ms
 â—‹ Compiling /dashboard/properties ...
 âœ“ Compiled /dashboard/properties in 2s (3202 modules)
 GET /dashboard/properties 200 in 2222ms
 GET /login 200 in 37ms
 GET /dashboard/properties 200 in 46ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."postalCode", "public"."Property"."country", "public"."Property"."latitude", "public"."Property"."longitude", "public"."Property"."ownerId", "public"."Property"."currentTenantId", "public"."Property"."type"::text, "public"."Property"."size", "public"."Property"."rooms", "public"."Property"."floor", "public"."Property"."rentAmount", "public"."Property"."currency", "public"."Property"."photos", "public"."Property"."status"::text, "public"."Property"."createdAt", "public"."Property"."updatedAt", COALESCE("aggr_selection_0_Issue"."_aggr_count_issues", 0) AS "_aggr_count_issues", COALESCE("aggr_selection_1_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers" FROM "public"."Property" LEFT JOIN (SELECT "public"."Issue"."propertyId", COUNT(*) AS "_aggr_count_issues" FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."propertyId") AS "aggr_selection_0_Issue" ON ("public"."Property"."id" = "aggr_selection_0_Issue"."propertyId") LEFT JOIN (SELECT "public"."Offer"."propertyId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."propertyId") AS "aggr_selection_1_Offer" ON ("public"."Property"."id" = "aggr_selection_1_Offer"."propertyId") WHERE 1=1 ORDER BY "public"."Property"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
 GET /api/trpc/property.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22type%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22type%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 317ms
 â—‹ Compiling /dashboard/owners ...
 âœ“ Compiled /dashboard/owners in 507ms (3197 modules)
 GET /dashboard/owners 200 in 602ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Owner"."id" FROM "public"."Owner" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt", COALESCE("aggr_selection_0_Property"."_aggr_count_properties", 0) AS "_aggr_count_properties" FROM "public"."Owner" LEFT JOIN (SELECT "public"."Property"."ownerId", COUNT(*) AS "_aggr_count_properties" FROM "public"."Property" WHERE 1=1 GROUP BY "public"."Property"."ownerId") AS "aggr_selection_0_Property" ON ("public"."Owner"."id" = "aggr_selection_0_Property"."ownerId") WHERE 1=1 ORDER BY "public"."Owner"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone", "public"."User"."isActive" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
 GET /api/trpc/owner.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22isCompany%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22isCompany%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 133ms
 â—‹ Compiling /dashboard/tenants ...
 âœ“ Compiled /dashboard/tenants in 583ms (3206 modules)
 GET /dashboard/tenants 200 in 637ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_Contract"."_aggr_count_contracts", 0) AS "_aggr_count_contracts" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."Contract"."tenantId", COUNT(*) AS "_aggr_count_contracts" FROM "public"."Contract" WHERE 1=1 GROUP BY "public"."Contract"."tenantId") AS "aggr_selection_0_Contract" ON ("public"."Tenant"."id" = "aggr_selection_0_Contract"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone", "public"."User"."isActive" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."type"::text, "public"."Property"."status"::text, "public"."Property"."currentTenantId" FROM "public"."Property" WHERE "public"."Property"."currentTenantId" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
 GET /api/trpc/tenant.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 84ms
 âœ“ Compiled /dashboard/providers in 410ms (3217 modules)
 GET /dashboard/providers 200 in 464ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Provider"."id" FROM "public"."Provider" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Provider"."id", "public"."Provider"."userId", "public"."Provider"."businessName", "public"."Provider"."specialty", "public"."Provider"."hourlyRate", "public"."Provider"."currency", "public"."Provider"."availability", "public"."Provider"."rating", "public"."Provider"."createdAt", "public"."Provider"."updatedAt", COALESCE("aggr_selection_0_Issue"."_aggr_count_assignedIssues", 0) AS "_aggr_count_assignedIssues" FROM "public"."Provider" LEFT JOIN (SELECT "public"."Issue"."assignedToId", COUNT(*) AS "_aggr_count_assignedIssues" FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."assignedToId") AS "aggr_selection_0_Issue" ON ("public"."Provider"."id" = "aggr_selection_0_Issue"."assignedToId") WHERE 1=1 ORDER BY "public"."Provider"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone", "public"."User"."isActive" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
 GET /api/trpc/provider.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 86ms
 âœ“ Compiled /dashboard/issues in 478ms (3226 modules)
 GET /dashboard/issues 200 in 538ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Issue"."id" FROM "public"."Issue" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Issue"."id", "public"."Issue"."ticketNumber", "public"."Issue"."propertyId", "public"."Issue"."reportedById", "public"."Issue"."assignedToId", "public"."Issue"."managedById", "public"."Issue"."title", "public"."Issue"."description", "public"."Issue"."category"::text, "public"."Issue"."priority"::text, "public"."Issue"."photos", "public"."Issue"."status"::text, "public"."Issue"."scheduledDate", "public"."Issue"."completedDate", "public"."Issue"."createdAt", "public"."Issue"."updatedAt", COALESCE("aggr_selection_0_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers", COALESCE("aggr_selection_1_IssueTimeline"."_aggr_count_timeline", 0) AS "_aggr_count_timeline" FROM "public"."Issue" LEFT JOIN (SELECT "public"."Offer"."issueId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."issueId") AS "aggr_selection_0_Offer" ON ("public"."Issue"."id" = "aggr_selection_0_Offer"."issueId") LEFT JOIN (SELECT "public"."IssueTimeline"."issueId", COUNT(*) AS "_aggr_count_timeline" FROM "public"."IssueTimeline" WHERE 1=1 GROUP BY "public"."IssueTimeline"."issueId") AS "aggr_selection_1_IssueTimeline" ON ("public"."Issue"."id" = "aggr_selection_1_IssueTimeline"."issueId") WHERE 1=1 ORDER BY "public"."Issue"."priority" DESC, "public"."Issue"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."ownerId" FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Provider"."id", "public"."Provider"."userId", "public"."Provider"."businessName", "public"."Provider"."specialty", "public"."Provider"."hourlyRate", "public"."Provider"."currency", "public"."Provider"."availability", "public"."Provider"."rating", "public"."Provider"."createdAt", "public"."Provider"."updatedAt" FROM "public"."Provider" WHERE "public"."Provider"."id" IN ($1,$2,$3,$4) OFFSET $5
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4) OFFSET $5
 GET /api/trpc/issue.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22status%22%3Anull%2C%22priority%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%2C%22priority%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 73ms
 âœ“ Compiled /dashboard/offers in 489ms (3237 modules)
 GET /dashboard/offers 200 in 527ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Offer"."id" FROM "public"."Offer" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Offer"."id", "public"."Offer"."offerNumber", "public"."Offer"."issueId", "public"."Offer"."propertyId", "public"."Offer"."createdById", "public"."Offer"."items", "public"."Offer"."laborCost", "public"."Offer"."materialCost", "public"."Offer"."totalAmount", "public"."Offer"."currency", "public"."Offer"."validUntil", "public"."Offer"."status"::text, "public"."Offer"."notes", "public"."Offer"."createdAt", "public"."Offer"."updatedAt" FROM "public"."Offer" WHERE 1=1 ORDER BY "public"."Offer"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."ownerId" FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Issue"."id", "public"."Issue"."title", "public"."Issue"."ticketNumber", "public"."Issue"."category"::text FROM "public"."Issue" WHERE "public"."Issue"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
 GET /api/trpc/offer.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 65ms
 â—‹ Compiling /dashboard/contracts ...
 âœ“ Compiled /dashboard/contracts in 545ms (3246 modules)
 GET /dashboard/contracts 200 in 593ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Contract"."id" FROM "public"."Contract" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Contract"."id", "public"."Contract"."propertyId", "public"."Contract"."tenantId", "public"."Contract"."startDate", "public"."Contract"."endDate", "public"."Contract"."rentAmount", "public"."Contract"."deposit", "public"."Contract"."paymentDay", "public"."Contract"."createdAt", "public"."Contract"."updatedAt", "public"."Contract"."attachments", "public"."Contract"."content", "public"."Contract"."contractNumber", "public"."Contract"."landlordSignature", "public"."Contract"."landlordSigned", "public"."Contract"."landlordSignedAt", "public"."Contract"."pdfUrl", "public"."Contract"."status"::text, "public"."Contract"."templateId", "public"."Contract"."tenantSignature", "public"."Contract"."tenantSigned", "public"."Contract"."tenantSignedAt", "public"."Contract"."title", "public"."Contract"."variables" FROM "public"."Contract" WHERE 1=1 ORDER BY "public"."Contract"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."type"::text FROM "public"."Property" WHERE "public"."Property"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
 GET /api/trpc/contract.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 80ms
 â—‹ Compiling /dashboard/reports ...
 âœ“ Compiled /dashboard/reports in 556ms (3257 modules)
 GET /dashboard/reports 200 in 608ms
prisma:query SELECT COUNT("public"."Issue"."id"), "public"."Issue"."priority"::text FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."priority" OFFSET $1
 GET /api/trpc/analytics.issuesByPriority?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 65ms
 GET /dashboard/settings 200 in 28ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."User"."id" FROM "public"."User" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE 1=1 ORDER BY "public"."User"."createdAt" DESC LIMIT $1 OFFSET $2
 GET /api/trpc/user.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22role%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22role%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 78ms
 GET / 200 in 122ms
 GET / 200 in 59ms
 GET /dashboard/properties 200 in 82ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."postalCode", "public"."Property"."country", "public"."Property"."latitude", "public"."Property"."longitude", "public"."Property"."ownerId", "public"."Property"."currentTenantId", "public"."Property"."type"::text, "public"."Property"."size", "public"."Property"."rooms", "public"."Property"."floor", "public"."Property"."rentAmount", "public"."Property"."currency", "public"."Property"."photos", "public"."Property"."status"::text, "public"."Property"."createdAt", "public"."Property"."updatedAt", COALESCE("aggr_selection_0_Issue"."_aggr_count_issues", 0) AS "_aggr_count_issues", COALESCE("aggr_selection_1_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers" FROM "public"."Property" LEFT JOIN (SELECT "public"."Issue"."propertyId", COUNT(*) AS "_aggr_count_issues" FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."propertyId") AS "aggr_selection_0_Issue" ON ("public"."Property"."id" = "aggr_selection_0_Issue"."propertyId") LEFT JOIN (SELECT "public"."Offer"."propertyId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."propertyId") AS "aggr_selection_1_Offer" ON ("public"."Property"."id" = "aggr_selection_1_Offer"."propertyId") WHERE 1=1 ORDER BY "public"."Property"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
 GET /api/trpc/property.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22type%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22type%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 288ms
 â—‹ Compiling /api/export/html ...
 âœ“ Compiled /api/export/html in 831ms (3214 modules)
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."postalCode", "public"."Property"."country", "public"."Property"."latitude", "public"."Property"."longitude", "public"."Property"."ownerId", "public"."Property"."currentTenantId", "public"."Property"."type"::text, "public"."Property"."size", "public"."Property"."rooms", "public"."Property"."floor", "public"."Property"."rentAmount", "public"."Property"."currency", "public"."Property"."photos", "public"."Property"."status"::text, "public"."Property"."createdAt", "public"."Property"."updatedAt" FROM "public"."Property" WHERE 1=1 ORDER BY "public"."Property"."createdAt" DESC OFFSET $1
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
 GET /api/export/html?type=properties&list=true 200 in 960ms
 GET / 200 in 140ms
 GET / 200 in 54ms
 â—‹ Compiling /dashboard/properties/new ...
 âœ“ Compiled /dashboard/properties/new in 1347ms (3267 modules)
 GET /dashboard/properties/new 200 in 1437ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Owner"."id" FROM "public"."Owner" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt", COALESCE("aggr_selection_0_Property"."_aggr_count_properties", 0) AS "_aggr_count_properties" FROM "public"."Owner" LEFT JOIN (SELECT "public"."Property"."ownerId", COUNT(*) AS "_aggr_count_properties" FROM "public"."Property" WHERE 1=1 GROUP BY "public"."Property"."ownerId") AS "aggr_selection_0_Property" ON ("public"."Owner"."id" = "aggr_selection_0_Property"."ownerId") WHERE 1=1 ORDER BY "public"."Owner"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone", "public"."User"."isActive" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
 GET /api/trpc/owner.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 388ms
 GET / 200 in 110ms
prisma:query SELECT 1
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."User" ("id","email","password","name","role","language","phone","isActive","createdAt","updatedAt") VALUES ($1,$2,$3,$4,CAST($5::text AS "public"."UserRole"),CAST($6::text AS "public"."Language"),$7,$8,$9,$10) RETURNING "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt"
prisma:query BEGIN
prisma:query INSERT INTO "public"."Owner" ("id","userId","taxNumber","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "public"."Owner"."id"
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
ðŸ“§ EMAIL (DEV MODE): {
  to: 'katabene@gmail.com',
  subject: 'ÃœdvÃ¶zÃ¶ljÃ¼k a Molino RENTAL CRM rendszerÃ©ben!',
  from: 'noreply@molino-rental.com',
  htmlPreview: '\n' +
    '<!DOCTYPE html>\n' +
    '<html lang="hu">\n' +
    '<head>\n' +
    '    <meta charset="UTF-8">\n' +
    '    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n' +
    '    <title>ÃœdvÃ¶zÃ¶ljÃ¼k a Molino RENTAL CRM-ben</title>\n' +
    '</h...'
}
Welcome email sent to new owner katabene@gmail.com
 POST /api/trpc/owner.quickCreate?batch=1 200 in 555ms
 â—‹ Compiling /dashboard/owners ...
 âœ“ Compiled /dashboard/owners in 514ms (1470 modules)
 GET /dashboard/owners 200 in 610ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Owner"."id" FROM "public"."Owner" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt", COALESCE("aggr_selection_0_Property"."_aggr_count_properties", 0) AS "_aggr_count_properties" FROM "public"."Owner" LEFT JOIN (SELECT "public"."Property"."ownerId", COUNT(*) AS "_aggr_count_properties" FROM "public"."Property" WHERE 1=1 GROUP BY "public"."Property"."ownerId") AS "aggr_selection_0_Property" ON ("public"."Owner"."id" = "aggr_selection_0_Property"."ownerId") WHERE 1=1 ORDER BY "public"."Owner"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."phone", "public"."User"."isActive" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
 GET /api/trpc/owner.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22isCompany%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22isCompany%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 75ms
 GET /dashboard/properties 200 in 48ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Property"."id" FROM "public"."Property" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Property"."id", "public"."Property"."street", "public"."Property"."city", "public"."Property"."postalCode", "public"."Property"."country", "public"."Property"."latitude", "public"."Property"."longitude", "public"."Property"."ownerId", "public"."Property"."currentTenantId", "public"."Property"."type"::text, "public"."Property"."size", "public"."Property"."rooms", "public"."Property"."floor", "public"."Property"."rentAmount", "public"."Property"."currency", "public"."Property"."photos", "public"."Property"."status"::text, "public"."Property"."createdAt", "public"."Property"."updatedAt", COALESCE("aggr_selection_0_Issue"."_aggr_count_issues", 0) AS "_aggr_count_issues", COALESCE("aggr_selection_1_Offer"."_aggr_count_offers", 0) AS "_aggr_count_offers" FROM "public"."Property" LEFT JOIN (SELECT "public"."Issue"."propertyId", COUNT(*) AS "_aggr_count_issues" FROM "public"."Issue" WHERE 1=1 GROUP BY "public"."Issue"."propertyId") AS "aggr_selection_0_Issue" ON ("public"."Property"."id" = "aggr_selection_0_Issue"."propertyId") LEFT JOIN (SELECT "public"."Offer"."propertyId", COUNT(*) AS "_aggr_count_offers" FROM "public"."Offer" WHERE 1=1 GROUP BY "public"."Offer"."propertyId") AS "aggr_selection_1_Offer" ON ("public"."Property"."id" = "aggr_selection_1_Offer"."propertyId") WHERE 1=1 ORDER BY "public"."Property"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Owner"."id", "public"."Owner"."userId", "public"."Owner"."taxNumber", "public"."Owner"."bankAccount", "public"."Owner"."billingStreet", "public"."Owner"."billingCity", "public"."Owner"."billingPostalCode", "public"."Owner"."billingCountry", "public"."Owner"."createdAt", "public"."Owner"."updatedAt" FROM "public"."Owner" WHERE "public"."Owner"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) OFFSET $11
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."userId", "public"."Tenant"."emergencyName", "public"."Tenant"."emergencyPhone", "public"."Tenant"."isActive", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."password", "public"."User"."name", "public"."User"."role"::text, "public"."User"."language"::text, "public"."User"."phone", "public"."User"."isActive", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
 GET /api/trpc/property.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3Anull%2C%22type%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22type%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 34ms
 GET /dashboard/properties/new 200 in 37ms
 GET / 200 in 77ms
